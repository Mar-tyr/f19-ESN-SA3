ersion: 2.1 # CircleCI syntax version
jobs: # a collection of steps
  build: # runs that are not using Workflows must have a `build` job as the entry point
    docker: # run the steps with Docker
      - image: circleci/node:8.10.0 # ...with this image as the primary container;
      - image: circleci/mongo:4.2.0-rc8 # Add mongodb image
    steps: # a collection of executable commands 
      - checkout # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache 
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-tools
          command: sudo npm install -g jest && sudo npm install -g grunt 
      - run:
          name: install-new-modules
          command: sudo npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: 
          name: cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run: # run tests
          name: run test
          environment: 
            CC_TEST_REPORTER_ID: 5b4857b772fd7ec2fcc7d481cf7c432c43db64e01f64a5e3bee7fa3673a6c05f
          command: |
            # if [ "$CIRCLE_BRANCH" == "master" ];
            # then
              ./cc-test-reporter before-build
            # fi
            npm run test
            # if [ "$CIRCLE_BRANCH" == "master" ];
            # then
              ./cc-test-reporter after-build -p "/home/circleci/project/" -t lcov --debug --exit-code $?
            # fi
      # - run: # run tests
      #     name: run jest test
      #     command: npm run test
      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: coverage
          prefix: coverage
      - store_test_results:  # special step to save test results
          path: coverage